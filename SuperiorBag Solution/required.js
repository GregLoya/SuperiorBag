function myLogin(login, password) //advanced login listener{	var theUser = directory.internalStore.User({name: login});	if (theUser != null) //user exists in the directory		return false; // allow directory authentication	else	// use data from the project for login	{      //default will be to reject login		var result = {error: 1024, errorMessage: 'Invalid Login'};		var securityDs = solution.getApplicationByName("SuperiorBag").ds;		var theUser = securityDs.User({userName:login});		if (theUser != null) // if a user was found		{			// see of the stored hash value is correct			var ha1 = directory.computeHA1(theUser.ID, password);			if (ha1 === theUser.ha1key)						//if (theUser.HA1Key === ha1)			{				var theGroups = [];				var putIntoStorage = {myID: theUser.ID};				if(theUser.mySalesRep != null)				{					putIntoStorage.mySalesRepID = theUser.mySalesRep.ID;									}				else				{					putIntoStorage.mySalesRepID = 0;									}								if (theUser.isAdmin)  					{						theGroups = ['Admin'];  					}				else if (theUser.isSalesRep)  					{						theGroups = ['SalesRep'];  					}				else if (theUser.isVendor)  					{						theGroups = ['Vendor'];  					}				else if (theUser.isCustomer)  					{						theGroups = ['Customer'];  					}   					  						//debugger;				result = {					ID: theUser.ID, 					name: theUser.userName, 					fullName: theUser.userName, 					belongsTo: theGroups,					storage: putIntoStorage};			}		}		return result; // either an error or a custom user object	}};