model.User.methods.userSignUp = function(vName, vPassword, vEmail) {	//var sessionRef = currentSession();	//var promoteToken = sessionRef.promoteWith('Admin');						//vStatus = loginByPassword('admin','admin');			// Get the user by userName. Error if already exists.      var theUser = ds.User.find("userName = :1", vName);      if(theUser == null) { // does not already exist      	try {			//debugger;			//vCustomer = new ds.Customer({companyName: 'test'});			//vCustomer.save();			//vUser = new ds.User({userName: vName, password: vPassword, email: vEmail, isCustomer: true, createdDate: new Date(), customer: vCustomer}).save();			var mySalesRep = ds.User.find("isSalesRep = :1", true);			vUser = new ds.User({userName: vName, password: vPassword, email: vEmail, isCustomer: true, createdDate: new Date(), mySalesRep: mySalesRep}).save();			//sessionRef.unPromote(promoteToken);		//debugger;				//var loggedOut = logout();								//var vStatus = loginByPassword(vName,vPassword);			    	}    catch (e) {    	//sessionRef.unPromote(promoteToken);        throw { // if fail                // send an exception with the customized message                // from the error stack            message: e.messages[e.messages.length - 1]                      };    }                  		}  		else  		{	                throw { message: 'Username already exists.'};		  		}  	};model.User.methods.userSignUp.scope="public";model.User.methods.login = function(username, password) {	var vStatus = loginByPassword(username,password);	};model.User.methods.login.scope="public";