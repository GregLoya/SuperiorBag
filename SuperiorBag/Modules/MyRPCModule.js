/*	In order to make the helloWorld() function available client-side, you have to add a reference to the 'MyRPCmodule' module in the GUI Designer.	The helloWorld() function can be executed from your JS file as follows:	alert(MyRPCmodule.helloWorld());		For more information, refer to http://doc.wakanda.org/Wakanda0.Beta/help/Title/en/page1516.html*/exports.helloWorld = function helloWorld () {	return ('Hello world');	};exports.postTo4D = function postTo4D (mySource) {		var xhr, headers, result, resultObj, URLText;   		URLText = "http://192.168.1.108/WakPO/PostPO"; // connect to an HTTP server   		var headersObj = {};   		xhr = new XMLHttpRequest(); // instanciate the xhr object   		xhr.onreadystatechange = function() { // event handler       		var state = this.readyState;       		if (state !== 4) { // while the status event is not Done we continue				return; }       		var headers = this.getAllResponseHeaders(); //get the headers of the response       		var result = this.responseText;  //get the contents of the response       		var headersArray = headers.split('\n'); // split and format the headers string in an array           	var name, indexSeparator, value;           		name='';  		       if (headersObj['Content-Type'] && headersObj['Content-Type'].indexOf('json') !== -1) {               // JSON response, parse it as objects           resultObj = JSON.parse(result);           resultTxt = 'ok me1!';//result;                  } else { // not JSON, return text           resultTxt = result;       }};var poClass = ds.PurchaseOrder;var myPO = ds.PurchaseOrder.query('ID == :1',mySource);	var params = ""; //"lorem=ipsum&name="+myPO.orderDate;var attribute = {};var formatter = require("formatting"); // access to modulefor( var e in poClass.attributes){	var attribute = poClass.attributes[e];	if(attribute.type=="date")	{		var myDate = new Date(myPO[attribute]);		var myISODate = dateToIso(myDate);		//params = params+attribute.getName()+"="+myPO[attribute]+"&";				params = params+attribute.getName()+"="+myISODate+"&";			}	else	{		params = params+attribute.getName()+"="+myPO[attribute]+"&";	}}	params = params+"end=true";   xhr.open('POST', URLText, true); // to connect to a Web site//Send the proper header information along with the requestxhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");xhr.setRequestHeader("Content-length", params.length);xhr.setRequestHeader("Connection", "close");	  // xhr.open('GET', URLText); // to connect to a Web site      // or xhr.open('GET', URLJson) to send a REST query to a Wakanda server   xhr.send(params); // send the request  statusLine = xhr.status + ' ' + xhr.statusText; // get the status   // we build the following object to display the responses in the code editor   ({       statusLine: statusLine,       headers: headersObj,       result: resultObj || resultTxt});//if(resultTxt.match(/error*/)){//do nothing but return the error//}//else//{	//myPO.id_4D = parseInt(resultTxt);		//myPO.save();	//myPO.sync();//}	return (resultTxt);	};exports.getItemList = function getItemList () {		var url = "http://192.168.1.108/WakPO/GetItemList"; //change url and port to your settings		var httpMethod = "GET";		xhr = new XMLHttpRequest();						   	xhr.onreadystatechange = function() { // event handler       			var state = this.readyState;       			if (state !== 4) { // while the status event is not Done we continue					return; }				resultTxt = xhr.responseText;						//itemData = JSON.parse(xhr.responseText);							//sources.itemData.sync();			};		xhr.open(httpMethod,url,true);		xhr.setRequestHeader('Accept', "application/json");		xhr.send("");	return (resultTxt);};